<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://localhost:4000/asterisk/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/asterisk/" rel="alternate" type="text/html" /><updated>2025-09-17T11:32:48+09:00</updated><id>http://localhost:4000/asterisk/feed.xml</id><title type="html">Asterisk</title><subtitle>주니어 개발자의 개발 기록</subtitle><author><name>개발둥이</name></author><entry><title type="html">Remote Process Group으로 중첩 데이터 구조 간소화</title><link href="http://localhost:4000/asterisk/nifi/Remote-Process-Group%EC%9C%BC%EB%A1%9C-%EC%A4%91%EC%B2%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-%EA%B0%84%EC%86%8C%ED%99%94/" rel="alternate" type="text/html" title="Remote Process Group으로 중첩 데이터 구조 간소화" /><published>2025-09-06T00:00:00+09:00</published><updated>2025-09-06T00:00:00+09:00</updated><id>http://localhost:4000/asterisk/nifi/Remote%20Process%20Group%EC%9C%BC%EB%A1%9C%20%EC%A4%91%EC%B2%A9%20%EB%8D%B0%EC%9D%B4%ED%84%B0%20%EA%B5%AC%EC%A1%B0%20%EA%B0%84%EC%86%8C%ED%99%94</id><content type="html" xml:base="http://localhost:4000/asterisk/nifi/Remote-Process-Group%EC%9C%BC%EB%A1%9C-%EC%A4%91%EC%B2%A9-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B5%AC%EC%A1%B0-%EA%B0%84%EC%86%8C%ED%99%94/"><![CDATA[<p>NiFi에서 데이터 플로우를 설계할 때, 관련된 프로세서들을 묶어 논리적으로 명확한 파이프라인을 구성할 수 있게 해주는 ‘프로세스 그룹(Process Group)’은 필수적인 기능입니다.</p>

<p>그러나, 여러 프로세스 그룹에서 처리된 결과를 최종적으로 로깅하거나 통합 처리해야 하는 경우에는 문제가 발생합니다.</p>

<p>각 중첩 레벨마다 Output Port를 만들어 외부로 데이터를 꺼내오는 방식은 그룹의 깊이가 깊어질수록 설정이 번거로워지고 전체 플로우의 직관성을 떨어뜨리기 때문입니다.</p>

<p>이번 포스트에서는 이러한 문제를 해결하기 위한 방법 중 하나인 <strong>Remote Process Group</strong>를 통해 데이터 플로우를 NiFi의 최상단으로 직접 전송하는 법을 알아보겠습니다.</p>

<h2 id="remote-process-group이란">Remote Process Group이란?</h2>

<p><strong>Remote Process Group(RPG)</strong>은 한마디로 NiFi의 ‘데이터 포털’입니다. 이걸 사용하면 현재 NiFi 인턴스에서 <strong>다른 NiFi 인턴스로 데이터를 보내거나 받을 수 있습니다.</strong></p>

<p>또 하나의 기능은 바로 자기 자신, 즉 <strong><code class="language-plaintext highlighter-rouge">localhost</code>로 데이터를 다시 보내는 ‘루프백(Loopback)’</strong> 기법입니다. 복잡하게 얽힌 프로세스 그룹을 깔끔하게 정리하거나, 공통 로직을 하나의 모듈처럼 만들어 재사용하고 싶을 때 유용하게 쓰이는 기술입니다.</p>

<h2 id="주요-설정-및-데이터-수신-방법">주요 설정 및 데이터 수신 방법</h2>

<p>RPG를 이용해 현재 NiFi의 최상단으로 데이터를 보내는 설정은 아주 간단합니다. 먼저 RPG를 캔버스에 추가하고 아래처럼 설정합니다.</p>

<h3 id="1-데이터-수신-위치에-input-port를-생성">1. 데이터 수신 위치에 Input port를 생성</h3>

<p>RPG가 보낸 데이터는 <strong>Input Port</strong>를 통해 수신해야 합니다. 데이터를 받고자 하는 위치(주로 최상단 캔버스)에 Input Port를 추가하고, 이름을 지정합니다.</p>

<h3 id="2-remote-process-group-설정">2. Remote Process Group 설정</h3>

<ul>
  <li><strong>URLs</strong>: 원격으로 접속할 NiFi의 주소를 입력합니다. 자기 자신에게 보낼 것이므로 <code class="language-plaintext highlighter-rouge">http://localhost:8080/nifi</code>와 같이 현재 NiFi의 주소를 적어줍니다.
<em>(만약 NiFi 보안 설정을 했다면 <code class="language-plaintext highlighter-rouge">https://localhost:9443/nifi</code>와 같이 https와 포트 번호를 맞춰주세요.)</em></li>
  <li><strong>Transport Protocol</strong>: NiFi 1.0.0 버전 이후부터는 기본적으로 HTTP 통신을 사용하므로 <strong><code class="language-plaintext highlighter-rouge">HTTP</code></strong>로 설정합니다.</li>
  <li><strong>활성화</strong>: 설정이 끝나면 RPG 컴포넌트를 우클릭하여 <strong><code class="language-plaintext highlighter-rouge">Enable transmission</code></strong>을 선택해 전송을 활성화합니다.</li>
  <li><strong>플로우를 port에 할당</strong> : 위에서 생성한 Input Port를 선택하면, 데이터를 해당 포트로 흘려보낼 수 있습니다.</li>
</ul>

<p>이 설정으로 RPG는 지정된 주소의 Input port로 NiFi로 데이터를 보낼 수 있게 됩니다.</p>

<h2 id="사용-예시">사용 예시</h2>

<p>가장 대표적인 예시는 도입부에서 언급한 것과 같이, <strong>깊게 중첩된 프로세스 그룹에서 로그나 처리 결과를 최상단으로 한 번에 보내는 경우</strong>입니다.</p>

<p>4~5단계 깊이의 프로세스 그룹에서 처리된 최종 결과물을 로깅하게 된다면, 일반적인 ‘Output Port’를 사용한다면 각 단계를 일일이 거쳐 나와야 해서 매우 번거롭습니다. 하지만 RPG를 사용하면 가장 깊은 곳에 있는 프로세스 그룹에서 RPG로 데이터를 연결하기만 해도 최상단 캔버스에 있는 Input Port로 데이터가 바로 도착합니다.</p>

<p><code class="language-plaintext highlighter-rouge">[개인 nifi 이미지 삽입 예정]</code></p>

<hr />

<h2 id="장점">장점</h2>

<ul>
  <li><strong>흐름의 단순화 및 가독성 향상</strong>: 여러 단계의 Output Port 연결을 생략할 수 있어, 아무리 복잡한 구조라도 데이터의 최종 목적지를 명확하고 깔끔하게 만들 수 있음.</li>
  <li><strong>모듈화 및 재사용성 증가</strong>: 공통으로 사용되는 로직(에러 처리, 로깅 등)을 최상단에 Input Port로 만들어두고, 여러 프로세스 ‘모듈’에서 RPG를 통해 데이터를 보내는 방식으로 재사용성을 높임.</li>
  <li><strong>클러스터 환경에서의 로드 밸런싱</strong>: NiFi 클러스터 환경에서 RPG를 <code class="language-plaintext highlighter-rouge">localhost</code>로 연결하면, 데이터가 클러스터 내의 여러 노드에 자동으로 분산되어 부하를 균등하게 만들 수 있음.</li>
</ul>

<hr />

<h2 id="단점">단점</h2>

<ul>
  <li><strong>네트워크 오버헤드 발생</strong>: 내부에 있는 컴포넌트끼리 연결하는 것과 달리, RPG는 로컬 환경이라도 <strong>내부적으로 네트워크 통신(S2S 프로토콜)을 사용</strong>함. 이로 인해 데이터 직렬화/역직렬화 과정이 추가되어 약간의 성능 저하 및 리소스 사용이 발생.</li>
  <li><strong>설정의 번거로움</strong>: 단순히 선을 긋는 것보다 URL 입력, Input Port 생성 등 추가적인 설정 단계가 필요.</li>
  <li><strong>분리된 트랜잭션</strong>: 데이터가 RPG를 통과하는 순간 하나의 트랜잭션이 끝나고, Input Port에서 새로운 트랜잭션으로 시작됨. 이 때문에 데이터의 흐름을 추적할 때 한 단계가 더 생긴 것처럼 보일 수 있음.</li>
</ul>

<hr />

<h2 id="결론">결론</h2>]]></content><author><name>개발둥이</name></author><category term="Nifi" /><category term="Nifi" /><category term="FlowFile" /><summary type="html"><![CDATA[NiFi에서 데이터 플로우를 설계할 때, 관련된 프로세서들을 묶어 논리적으로 명확한 파이프라인을 구성할 수 있게 해주는 ‘프로세스 그룹(Process Group)’은 필수적인 기능입니다.]]></summary></entry><entry><title type="html">정규표현식 기초</title><link href="http://localhost:4000/asterisk/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D/" rel="alternate" type="text/html" title="정규표현식 기초" /><published>2025-08-19T00:00:00+09:00</published><updated>2025-08-19T00:00:00+09:00</updated><id>http://localhost:4000/asterisk/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D</id><content type="html" xml:base="http://localhost:4000/asterisk/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D/%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D/"><![CDATA[<p>정규표현식(Regular Expression, 줄여서 <strong>Regex</strong>)은 문자열에서 <strong>특정 패턴을 찾고, 검사하고, 치환</strong>하기 위한 표현법입니다.
프로그래밍, 데이터 분석, 로그 검색, 웹 크롤링 등 다양한 분야에서 필수적으로 사용됩니다.</p>

<p>저의 경우 데이터 색인 시에 특정 데이터(날짜나 이름 등)의 형태를 변환할 때 주로 사용합니다.</p>

<hr />

<h2 id="1-문자열의-시작과-끝">1. 문자열의 시작과 끝</h2>

<table>
  <thead>
    <tr>
      <th>패턴</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">^x</code></td>
      <td>문자열이 <strong>x로 시작</strong></td>
      <td><code class="language-plaintext highlighter-rouge">^Hello</code> → <code class="language-plaintext highlighter-rouge">"Hello world"</code> ✅, <code class="language-plaintext highlighter-rouge">"Hi Hello"</code> ❌</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x$</code></td>
      <td>문자열이 <strong>x로 끝</strong></td>
      <td><code class="language-plaintext highlighter-rouge">world$</code> → <code class="language-plaintext highlighter-rouge">"Hello world"</code> ✅, <code class="language-plaintext highlighter-rouge">"worldwide"</code> ❌</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="2-문자-매칭">2. 문자 매칭</h2>

<table>
  <thead>
    <tr>
      <th>패턴</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">.x</code></td>
      <td>임의의 한 문자 + x</td>
      <td><code class="language-plaintext highlighter-rouge">.a</code> → <code class="language-plaintext highlighter-rouge">"ba"</code> ✅, <code class="language-plaintext highlighter-rouge">"ca"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x+</code></td>
      <td><strong>x가 1번 이상 반복</strong></td>
      <td><code class="language-plaintext highlighter-rouge">go+</code> → <code class="language-plaintext highlighter-rouge">"go"</code>, <code class="language-plaintext highlighter-rouge">"goo"</code>, <code class="language-plaintext highlighter-rouge">"gooo"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x?</code></td>
      <td>x가 <strong>있을 수도, 없을 수도 있음</strong></td>
      <td><code class="language-plaintext highlighter-rouge">colou?r</code> → <code class="language-plaintext highlighter-rouge">"color"</code>, <code class="language-plaintext highlighter-rouge">"colour"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x*</code></td>
      <td>x가 <strong>0번 이상 반복</strong></td>
      <td><code class="language-plaintext highlighter-rouge">go*</code> → <code class="language-plaintext highlighter-rouge">"g"</code>, <code class="language-plaintext highlighter-rouge">"go"</code>, <code class="language-plaintext highlighter-rouge">"goo"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x|y</code></td>
      <td>x <strong>또는</strong> y</td>
      <td><code class="language-plaintext highlighter-rouge">dog|cat</code> → <code class="language-plaintext highlighter-rouge">"dog"</code> ✅, <code class="language-plaintext highlighter-rouge">"cat"</code> ✅</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="3-그룹과-반복">3. 그룹과 반복</h2>
<p>괄호 내부를 한 묶음으로 처리합니다.</p>

<table>
  <thead>
    <tr>
      <th>패턴</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">(x)</code></td>
      <td>그룹 지정</td>
      <td><code class="language-plaintext highlighter-rouge">(ab)+</code> → <code class="language-plaintext highlighter-rouge">"ab"</code>, <code class="language-plaintext highlighter-rouge">"abab"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">(x)(y)</code></td>
      <td>여러 그룹</td>
      <td><code class="language-plaintext highlighter-rouge">(a)(b)</code> → <code class="language-plaintext highlighter-rouge">"ab"</code> → <code class="language-plaintext highlighter-rouge">$1="a"</code>, <code class="language-plaintext highlighter-rouge">$2="b"</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x{n}</code></td>
      <td>x가 <strong>n번 반복</strong></td>
      <td><code class="language-plaintext highlighter-rouge">a{3}</code> → <code class="language-plaintext highlighter-rouge">"aaa"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x{n,}</code></td>
      <td>x가 <strong>n번 이상 반복</strong></td>
      <td><code class="language-plaintext highlighter-rouge">a{2,}</code> → <code class="language-plaintext highlighter-rouge">"aa"</code>, <code class="language-plaintext highlighter-rouge">"aaa"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">x{n,m}</code></td>
      <td>x가 <strong>n~m번 반복</strong></td>
      <td><code class="language-plaintext highlighter-rouge">a{2,4}</code> → <code class="language-plaintext highlighter-rouge">"aa"</code>, <code class="language-plaintext highlighter-rouge">"aaa"</code>, <code class="language-plaintext highlighter-rouge">"aaaa"</code> ✅</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="4-문자-집합">4. 문자 집합</h2>
<p>괄호 내부에 지정된 문자열의 범위 중 한 문자만을 선택합니다.
문자와 숫자 범위를 지정할 수 있습니다.</p>

<table>
  <thead>
    <tr>
      <th>패턴</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">[xyz]</code></td>
      <td>x, y, z 중 하나</td>
      <td><code class="language-plaintext highlighter-rouge">[aeiou]</code> → <code class="language-plaintext highlighter-rouge">"a"</code>, <code class="language-plaintext highlighter-rouge">"e"</code>, <code class="language-plaintext highlighter-rouge">"i"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">[x-z]</code></td>
      <td>x부터 z까지</td>
      <td><code class="language-plaintext highlighter-rouge">[m-p]</code> → <code class="language-plaintext highlighter-rouge">"m"</code>, <code class="language-plaintext highlighter-rouge">"n"</code>, <code class="language-plaintext highlighter-rouge">"o"</code>, <code class="language-plaintext highlighter-rouge">"p"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">[^xy]</code></td>
      <td>x, y를 제외한 글자</td>
      <td><code class="language-plaintext highlighter-rouge">[^ab]</code> → <code class="language-plaintext highlighter-rouge">"c"</code>, <code class="language-plaintext highlighter-rouge">"d"</code> ✅</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="5-경계와-특수-문자">5. 경계와 특수 문자</h2>

<table>
  <thead>
    <tr>
      <th>패턴</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\^</code></td>
      <td>^를 문자로 인식</td>
      <td><code class="language-plaintext highlighter-rouge">\^abc</code> → <code class="language-plaintext highlighter-rouge">^abc</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\b</code></td>
      <td>단어 경계</td>
      <td><code class="language-plaintext highlighter-rouge">\bcat\b</code> → <code class="language-plaintext highlighter-rouge">"cat"</code> ✅ (<code class="language-plaintext highlighter-rouge">"concatenate"</code> ❌)</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\B</code></td>
      <td>단어 경계가 아님</td>
      <td><code class="language-plaintext highlighter-rouge">\Bcat\B</code> → <code class="language-plaintext highlighter-rouge">"concatenate"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\d</code></td>
      <td>숫자</td>
      <td><code class="language-plaintext highlighter-rouge">\d+</code> → <code class="language-plaintext highlighter-rouge">"123"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\D</code></td>
      <td>숫자가 아닌 문자</td>
      <td><code class="language-plaintext highlighter-rouge">\D+</code> → <code class="language-plaintext highlighter-rouge">"abc"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\s</code></td>
      <td>공백</td>
      <td><code class="language-plaintext highlighter-rouge">"a\sb"</code> → <code class="language-plaintext highlighter-rouge">"a b"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\S</code></td>
      <td>공백이 아닌 문자</td>
      <td><code class="language-plaintext highlighter-rouge">\S+</code> → <code class="language-plaintext highlighter-rouge">"hello"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\t</code></td>
      <td>탭</td>
      <td>-</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\v</code></td>
      <td>수직 탭</td>
      <td>-</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\w</code></td>
      <td>알파벳 + 숫자 + <code class="language-plaintext highlighter-rouge">_</code></td>
      <td><code class="language-plaintext highlighter-rouge">\w+</code> → <code class="language-plaintext highlighter-rouge">"word123_"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">\W</code></td>
      <td>알파벳/숫자/_ 제외</td>
      <td><code class="language-plaintext highlighter-rouge">\W+</code> → <code class="language-plaintext highlighter-rouge">"!@#"</code> ✅</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="6-와일드카드">6. 와일드카드</h2>

<table>
  <thead>
    <tr>
      <th>패턴</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">.</code></td>
      <td>어떤 문자든 한 글자</td>
      <td><code class="language-plaintext highlighter-rouge">.at</code> → <code class="language-plaintext highlighter-rouge">"cat"</code>, <code class="language-plaintext highlighter-rouge">"bat"</code> ✅</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">.*</code></td>
      <td>어떤 글자가 몇 번이든 가능</td>
      <td><code class="language-plaintext highlighter-rouge">Hello.*</code> → <code class="language-plaintext highlighter-rouge">"Hello"</code>, <code class="language-plaintext highlighter-rouge">"Hello world"</code> ✅</td>
    </tr>
  </tbody>
</table>

<hr />

<h2 id="7-예제--이메일-검증-정규표현식">7. 예제 — 이메일 검증 정규표현식</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
</code></pre></div></div>

<ul>
  <li>^[a-zA-Z0-9._%+-]+ → 이메일 아이디 부분
    <ul>
      <li>영문자 대소문자, 숫자, 마침표, 특수문자가 한 번 이상 반복됨</li>
    </ul>
  </li>
  <li>@ → @ 기호</li>
  <li>[a-zA-Z0-9.-]+ → 도메인
    <ul>
      <li>영문자 대소문자, 숫자, 마침표, 하이픈 허용</li>
      <li>집합 내부의 마침표는 와일드카드의 기능을 잃음</li>
    </ul>
  </li>
  <li>.[a-zA-Z]{2,}$ → 최상위 도메인(.com, .net 등)
    <ul>
      <li>마침표 문자 뒤에 영문자가 2개 이상 오고 끝나야 함</li>
    </ul>
  </li>
</ul>]]></content><author><name>개발둥이</name></author><category term="정규표현식" /><category term="Regex" /><category term="정규표현식" /><category term="문자열" /><summary type="html"><![CDATA[정규표현식(Regular Expression, 줄여서 Regex)은 문자열에서 특정 패턴을 찾고, 검사하고, 치환하기 위한 표현법입니다. 프로그래밍, 데이터 분석, 로그 검색, 웹 크롤링 등 다양한 분야에서 필수적으로 사용됩니다.]]></summary></entry><entry><title type="html">FlowFile 조작을 위한 프로세서 비교</title><link href="http://localhost:4000/asterisk/nifi/flowfile-%ED%8E%B8%EC%A7%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%84%9C/" rel="alternate" type="text/html" title="FlowFile 조작을 위한 프로세서 비교" /><published>2025-08-19T00:00:00+09:00</published><updated>2025-08-19T00:00:00+09:00</updated><id>http://localhost:4000/asterisk/nifi/flowfile%20%ED%8E%B8%EC%A7%91%EC%9A%A9%20%ED%94%84%EB%A1%9C%EC%84%B8%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/asterisk/nifi/flowfile-%ED%8E%B8%EC%A7%91%EC%9A%A9-%ED%94%84%EB%A1%9C%EC%84%B8%EC%84%9C/"><![CDATA[<p>NiFi 데이터 파이프라인에서 FlowFile 콘텐츠를 변환하고 보강하는 작업은 핵심적인 단계입니다. 이 과정에서 어떤 프로세서를 선택하느냐에 따라 파이프라인의 성능과 유지보수성이 크게 달라질 수 있습니다.</p>

<p>이번 포스트에서는 <strong>ReplaceText</strong>, <strong>ReplaceTextwithMapping</strong>, <strong>UpdateRecord</strong>, <strong>JoltTransformJSON</strong> 등 주요 FlowFile 편집 프로세서들의 특징과 사용법을 자세히 살펴보겠습니다.</p>

<hr />

<h2 id="1-replacetext---간단한-텍스트-치환">1. ReplaceText - 간단한 텍스트 치환</h2>

<h3 id="특징">특징</h3>
<ul>
  <li>FlowFile에서 원하는 값을 직접 입력하여 치환하는 가장 기본적인 프로세서</li>
  <li>정규식(Regex) 지원으로 복잡한 패턴 매칭 가능</li>
  <li>간단한 텍스트 수정에 적합</li>
</ul>

<h3 id="주요-설정">주요 설정</h3>
<ul>
  <li><strong>Search Value</strong>: 바꾸고자 하는 값 또는 정규식</li>
  <li><strong>Replacement Value</strong>: 바꿔 넣을 값</li>
</ul>

<h3 id="사용-예시">사용 예시</h3>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>로그 파일의 IP 주소 마스킹
프로세서 설정
- Search Value: \b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b
- Replacement Value: ***.***.***.***

입력 데이터 (로그 파일)
[INFO] User 192.168.1.100 accessed /api/users
[ERROR] Connection failed from 10.0.0.50
[INFO] Database query from 172.16.0.25

변환 결과
[INFO] User ***.***.***.*** accessed /api/users
[ERROR] Connection failed from ***.***.***.***
[INFO] Database query from ***.***.***.***
</code></pre></div></div>

<hr />

<h2 id="2-replacetextwithmapping---매핑-기반-치환">2. ReplaceTextwithMapping - 매핑 기반 치환</h2>

<h3 id="특징-1">특징</h3>
<ul>
  <li>정규식에 검색된 값을 키로 구분하여 여러 변환값을 매핑</li>
  <li>대량의 치환 작업에 효율적</li>
  <li>외부 매핑 파일을 통한 유지보수성 향상</li>
</ul>

<h3 id="주요-설정-1">주요 설정</h3>
<ul>
  <li><strong>RegularExpression</strong>: 키 값을 잡아낼 정규식</li>
  <li><strong>Mapping File</strong>: 프로세서 변수로 매핑 파일의 절대경로 지정</li>
</ul>

<h3 id="️-주의사항">⚠️ 주의사항</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">|</code> 연산자로 여러 정규식을 입력할 경우 처리능력이 매우 떨어짐</li>
  <li>매핑 파일은 운영체제 내부(WSL 등)에서의 절대경로 사용</li>
</ul>

<h3 id="사용-예시-1">사용 예시</h3>

<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>상품의 카테고리 코드를 한글로 변경
프로세서 설정
- RegularExpression: CAT\d{3}
- Mapping File: /opt/nifi/mappings/category_mapping.txt

매핑 파일 내용
CAT001\t전자제품
CAT002\t의류
CAT003\t식품
CAT004\t도서
CAT005\t스포츠용품
매핑 파일은 `키값\t치환값` 형태로 작성하며, `\t`은 탭 키로 입력합니다.


입력 데이터 (주문 내역)
주문번호: ORD001, 상품: CAT001, 수량: 2
주문번호: ORD002, 상품: CAT003, 수량: 1
주문번호: ORD003, 상품: CAT005, 수량: 3

변환 결과
주문번호: ORD001, 상품: 전자제품, 수량: 2
주문번호: ORD002, 상품: 식품, 수량: 1
주문번호: ORD003, 상품: 스포츠용품, 수량: 3
</code></pre></div></div>

<hr />

<h2 id="3-updaterecord---레코드-기반-데이터-수정">3. UpdateRecord - 레코드 기반 데이터 수정</h2>

<h3 id="특징-2">특징</h3>
<ul>
  <li>JSON 데이터의 특정 필드만 선택적으로 수정</li>
  <li>RecordPath 표현식을 통한 정교한 데이터 조작</li>
  <li>대용량 데이터 처리에 최적화</li>
</ul>

<h3 id="record-reader-선택">Record Reader 선택</h3>
<p>JSON 데이터를 읽는 recored reader 항목에는 두 가지 옵션이 있습니다</p>

<ol>
  <li><strong>JsonTreeReader</strong> (권장)
    <ul>
      <li>전체 JSON 구조 유지</li>
      <li>안전하고 예측 가능한 동작</li>
      <li>데이터의 일부만 변경할 경우</li>
    </ul>
  </li>
  <li><strong>JsonPathReader</strong>
    <ul>
      <li>지정된 path 이외의 데이터를 모두 제거</li>
      <li>데이터 손실 위험</li>
      <li>특정 데이터만 필요한 경우</li>
    </ul>
  </li>
</ol>

<h3 id="주요-설정-2">주요 설정</h3>
<ul>
  <li><strong>Record Reader</strong>: JsonTreeReader 또는 JsonPathReader</li>
  <li><strong>Record Set Writer</strong>: JsonRecordSetWriter</li>
  <li><strong>Replacement Value Strategy</strong>: Record Path Value로 설정</li>
</ul>

<h3 id="프로퍼티-설정">프로퍼티 설정</h3>

<p><strong>프로퍼티 명:</strong> 조작할 데이터의 JSON path 형태</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/author
/category/snacks
</code></pre></div></div>

<p><strong>프로퍼티 값:</strong> RecordPath 표현식을 사용한 데이터 수정 로직</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>replace<span class="o">(</span>replace<span class="o">(</span>toLowerCase<span class="o">(</span>/author<span class="o">)</span>, <span class="s1">','</span>, <span class="s1">''</span><span class="o">)</span>, <span class="s1">'-'</span>, <span class="s1">' '</span><span class="o">)</span>
trim<span class="o">(</span>/publication_country<span class="o">)</span>
</code></pre></div></div>

<h3 id="recordpath-표현식-예시">RecordPath 표현식 예시</h3>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>replace<span class="o">(</span>replaceRegex<span class="o">(</span>/data, <span class="s1">'^.*$'</span>,<span class="s1">'k'</span><span class="o">)</span>, <span class="s1">'k'</span>, <span class="s1">'t'</span><span class="o">)</span>
</code></pre></div></div>

<h3 id="️-주의사항-1">⚠️ 주의사항</h3>
<ul>
  <li>JsonRecordSetWriter 사용 시 반환값은 항상 Array에 감싸진 형태</li>
  <li>데이터를 개별 데이터로 분할하기 전에 사용하는 것을 권장</li>
</ul>

<h3 id="사용-예시-2">사용 예시</h3>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>프로세서 설정
- Record Reader: JsonTreeReader
- Record Set Writer: JsonRecordSetWriter
- 프로퍼티: 
  /customerName = trim(/customerName)
  /phoneNumber = replaceRegex(/phoneNumber, '[^0-9]', '')
  /email = toLowerCase(/email)

입력 JSON (고객 데이터)
[
  {
    "customerId": "C001",
    "customerName": "  김철수  ",
    "phoneNumber": "010-123-4567",
    "email": "KIM@EXAMPLE.COM",
    "status": "active"
  },
  {
    "customerId": "C002", 
    "customerName": "이영희",
    "phoneNumber": "010.987.6543",
    "email": "LEE@EXAMPLE.COM",
    "status": "inactive"
  }
]

변환 결과
[
  {
    "customerId": "C001",
    "customerName": "김철수",
    "phoneNumber": "0101234567",
    "email": "kim@example.com",
    "status": "active"
  },
  {
    "customerId": "C002",
    "customerName": "이영희", 
    "phoneNumber": "0109876543",
    "email": "lee@example.com",
    "status": "inactive"
  }
]
</code></pre></div></div>

<h3 id="장점">장점</h3>
<ul>
  <li>특정 Path의 데이터만 조회하므로 FlowFileContent가 방대할 때 유용</li>
  <li>ReplaceText는 전체 데이터에서 정규식 검색을 하지만, UpdateRecord는 선택적 처리가 가능</li>
  <li>스키마(Schema) 기반으로 동작하기 때문에, FlowFile의 전체 내용을 메모리에 로드하지 않고 스트리밍 방식으로 레코드를 하나씩 처리함</li>
</ul>

<hr />

<h2 id="4-jolttransformjson---고급-json-변환">4. JoltTransformJSON - 고급 JSON 변환</h2>

<h3 id="특징-3">특징</h3>
<ul>
  <li>JOLT(JSON to JSON Transformation Language) 기반</li>
  <li>복잡한 JSON 구조 변환에 특화</li>
  <li>체인 형태로 여러 변환 작업을 순차적으로 처리</li>
</ul>

<h3 id="jolt-transformation-dsl">Jolt Transformation DSL</h3>
<ul>
  <li><strong>Chain</strong> 모드로 설정하여 여러 요청을 한번에 처리</li>
  <li>모든 operation 객체들은 배열 안에 존재해야 함</li>
</ul>

<h3 id="주요-operation-유형">주요 Operation 유형</h3>

<h4 id="1-modify-overwrite-beta">1. modify-overwrite-beta</h4>
<p>필드의 값을 직접 조작할 때 사용</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"modify-overwrite-beta"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="s2">"=trim(@(1,author))"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"=split(',', @(1,description))"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"content"</span><span class="p">:</span><span class="w"> </span><span class="s2">"=replace(@(1,content), 'old_word', 'new_word')"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">입력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"author"</span><span class="p">:</span><span class="w"> </span><span class="s2">"  John Doe  "</span><span class="p">,</span><span class="w">
  </span><span class="nl">"description"</span><span class="p">:</span><span class="w"> </span><span class="s2">"nifi,jolt,json"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"content"</span><span class="p">:</span><span class="w"> </span><span class="s2">"This is the old_word."</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">출력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"author"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"John Doe"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"description"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w"> </span><span class="s2">"nifi"</span><span class="p">,</span><span class="w"> </span><span class="s2">"jolt"</span><span class="p">,</span><span class="w"> </span><span class="s2">"json"</span><span class="w"> </span><span class="p">],</span><span class="w">
  </span><span class="nl">"content"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"This is the new_word."</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="2-shift">2. shift</h4>
<p>구성 재배치, 키값 변경 등에 사용</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"shift"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"customer"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.fullName"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"birthDate"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.dateOfBirth"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.address.street"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.address.country"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">입력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"orderId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"abc-123"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"customer"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"홍길동"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"birthDate"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1995-01-10"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"서울시 강남구 테헤란로"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"대한민국"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">출력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"client"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"fullName"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"홍길동"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"dateOfBirth"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"1995-01-10"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"address"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"street"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"서울시 강남구 테헤란로"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"country"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"대한민국"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>
<p><strong>필드 명칭</strong></p>
<ul>
  <li><strong>LHS (Left Hand Side)</strong>: 변환할 필드 경로 (키 위치)</li>
  <li><strong>RHS (Right Hand Side)</strong>: 변환 결과를 저장할 필드 경로 (값 위치)</li>
</ul>

<p><strong>특수 연산자:</strong></p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">&amp;</code>: 기존 필드명 재사용</li>
  <li><code class="language-plaintext highlighter-rouge">"user-&amp;"</code>: 접두어 추가</li>
  <li><code class="language-plaintext highlighter-rouge">"&amp;-info"</code>: 접미어 추가</li>
</ul>

<h4 id="3-default">3. default</h4>
<p>존재하지 않는 필드에 대한 기본값 추가</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"default"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"active"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"is_checked"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">입력</span><span class="w"> </span><span class="err">데이터</span><span class="w"> </span><span class="err">(status</span><span class="w"> </span><span class="err">필드가</span><span class="w"> </span><span class="err">없음)</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"item-100"</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">출력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"item-100"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"active"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"is_checked"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="4-remove">4. remove</h4>
<p>지정된 필드를 JSON에서 제거</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"remove"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"temp_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w">
    </span><span class="nl">"user"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"log"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">입력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">123</span><span class="p">,</span><span class="w">
  </span><span class="nl">"temp_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"temp_xyz"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"user"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Alice"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"log"</span><span class="p">:</span><span class="w"> </span><span class="s2">"user logged in"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">//</span><span class="w"> </span><span class="err">출력</span><span class="w"> </span><span class="err">데이터</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="nl">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">123</span><span class="p">,</span><span class="w">
  </span><span class="nl">"user"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Alice"</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="5-sort">5. sort</h4>
<p>입력된 JSON 객체의 키를 알파벳 순으로 정렬</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"sort"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="6-cardinality">6. cardinality</h4>
<p>배열과 단일 값 간의 변환</p>
<ul>
  <li>ONE : 배열을 단일 값으로 변경 (첫 번째 값만 남김)</li>
  <li>MANY : 단일 값을 배열로 만듦 (크기 1의 배열)</li>
</ul>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cardinality"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"tags"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ONE"</span><span class="w">    
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h3 id="jolt-스펙-작성-예시">Jolt 스펙 작성 예시</h3>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"shift"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"customer"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.fullName"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"birthDate"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.dateOfBirth"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.address.street"</span><span class="p">,</span><span class="w">
        </span><span class="nl">"country"</span><span class="p">:</span><span class="w"> </span><span class="s2">"client.address.country"</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="nl">"operation"</span><span class="p">:</span><span class="w"> </span><span class="s2">"modify-overwrite-beta"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"spec"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"client.fullName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"=trim"</span><span class="p">,</span><span class="w">
      </span><span class="nl">"client.address.street"</span><span class="p">:</span><span class="w"> </span><span class="s2">"=toLowerCase"</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="err">......</span><span class="w">
</span><span class="p">]</span><span class="w">
</span></code></pre></div></div>

<hr />

<h2 id="프로세서-선택-가이드">프로세서 선택 가이드</h2>

<h3 id="언제-어떤-프로세서를-사용할까">언제 어떤 프로세서를 사용할까?</h3>

<table>
  <thead>
    <tr>
      <th>상황</th>
      <th>권장 프로세서</th>
      <th>이유</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>간단한 텍스트 치환</td>
      <td>ReplaceText</td>
      <td>설정 간단, 직관적</td>
    </tr>
    <tr>
      <td>대량의 치환 작업</td>
      <td>ReplaceTextwithMapping</td>
      <td>외부 파일로 관리 용이</td>
    </tr>
    <tr>
      <td>JSON 특정 필드 수정</td>
      <td>UpdateRecord</td>
      <td>성능 우수, 선택적 처리</td>
    </tr>
    <tr>
      <td>복잡한 JSON 구조 변환</td>
      <td>JoltTransformJSON</td>
      <td>강력한 변환 기능</td>
    </tr>
  </tbody>
</table>

<h3 id="성능-고려사항">성능 고려사항</h3>
<ul>
  <li><strong>ReplaceText</strong>: 전체 텍스트 검색으로 대용량 데이터 시 성능 저하</li>
  <li><strong>UpdateRecord</strong>: 선택적 처리로 대용량 데이터에 최적화</li>
  <li><strong>JoltTransformJSON</strong>: 복잡한 변환 시 체인 길이에 따라 성능 영향</li>
</ul>

<hr />

<h2 id="결론">결론</h2>

<p>Apache NiFi의 FlowFile 편집 프로세서는 각각의 장단점이 있습니다.</p>

<ul>
  <li><strong>간단한 작업</strong>에는 ReplaceText</li>
  <li><strong>체계적인 치환</strong>에는 ReplaceTextwithMapping</li>
  <li><strong>JSON 필드 수정</strong>에는 UpdateRecord</li>
  <li><strong>복잡한 JSON 변환</strong>에는 JoltTransformJSON</li>
</ul>

<p>을 사용하는 것이 적절합니다.</p>

<p>프로젝트의 요구사항과 데이터 특성을 고려하여 적절한 프로세서를 선택하고, 필요에 따라 여러 프로세서를 조합하여 사용하는 것이 효과적입니다.</p>

<hr />

<h2 id="참고-자료">참고 자료</h2>

<ul>
  <li><a href="https://nifi.apache.org/docs/nifi-docs/html/record-path-guide.html">Apache NiFi RecordPath Guide</a></li>
  <li><a href="https://github.com/bazaarvoice/jolt">JOLT GitHub Repository</a></li>
  <li><a href="https://nifi.apache.org/docs.html">Apache NiFi User Guide</a></li>
</ul>]]></content><author><name>개발둥이</name></author><category term="Nifi" /><category term="Nifi" /><category term="FlowFile" /><category term="DataProcessing" /><category term="ETL" /><summary type="html"><![CDATA[NiFi 데이터 파이프라인에서 FlowFile 콘텐츠를 변환하고 보강하는 작업은 핵심적인 단계입니다. 이 과정에서 어떤 프로세서를 선택하느냐에 따라 파이프라인의 성능과 유지보수성이 크게 달라질 수 있습니다.]]></summary></entry><entry><title type="html">MySQL 쿼리</title><link href="http://localhost:4000/asterisk/sql/SQL-%EC%BF%BC%EB%A6%AC/" rel="alternate" type="text/html" title="MySQL 쿼리" /><published>2025-08-11T00:00:00+09:00</published><updated>2025-08-11T00:00:00+09:00</updated><id>http://localhost:4000/asterisk/sql/SQL-%EC%BF%BC%EB%A6%AC</id><content type="html" xml:base="http://localhost:4000/asterisk/sql/SQL-%EC%BF%BC%EB%A6%AC/"><![CDATA[<p>데이터베이스를 다루다 보면 SQL 쿼리 작성이 필수가 됩니다. 특히 MySQL을 사용할 때 자주 쓰이는 구문과 함수들을 정리해두면 실무에서 큰 도움이 됩니다.</p>

<p>이번 글에서는 <strong>SELECT 문의 기본 구조</strong>부터 <strong>문자열, 날짜, 숫자, 조건식 함수</strong>까지 MySQL에서 자주 사용하는 SQL 쿼리들을 예제와 함께 정리해보겠습니다.</p>

<blockquote>
  <p><strong>💡 참고사항</strong><br />
이 글의 모든 예제는 <strong>MySQL 8.0</strong> 기준으로 작성되었습니다. PostgreSQL, SQL Server, Oracle 등 다른 RDBMS에서는 함수명이나 문법이 다를 수 있으니 참고해주세요.</p>
</blockquote>

<h2 id="select-문의-기본-구조">SELECT 문의 기본 구조</h2>

<p>SQL에서 데이터를 조회할 때 사용하는 SELECT 문의 기본 구조는 다음과 같습니다:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="err">컬럼</span><span class="mi">1</span><span class="p">,</span> <span class="err">컬럼</span><span class="mi">2</span><span class="p">,</span> <span class="p">...</span>
<span class="k">FROM</span> <span class="err">테이블명</span>
<span class="k">WHERE</span> <span class="err">조건</span><span class="mi">1</span> <span class="k">AND</span> <span class="err">조건</span><span class="mi">2</span> <span class="k">OR</span> <span class="p">(</span><span class="err">조건</span><span class="mi">3</span> <span class="k">AND</span> <span class="err">조건</span><span class="mi">4</span><span class="p">)</span>
<span class="k">GROUP</span> <span class="k">BY</span> <span class="err">그룹화할</span><span class="n">_</span><span class="err">컬럼</span><span class="mi">1</span><span class="p">,</span> <span class="err">그룹화할</span><span class="n">_</span><span class="err">컬럼</span><span class="mi">2</span>
<span class="k">HAVING</span> <span class="err">그룹</span><span class="n">_</span><span class="err">조건</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="err">정렬할</span><span class="n">_</span><span class="err">컬럼</span> <span class="k">ASC</span><span class="o">|</span><span class="k">DESC</span><span class="p">,</span> <span class="err">정렬할</span><span class="n">_</span><span class="err">컬럼</span><span class="mi">2</span> <span class="k">ASC</span><span class="o">|</span><span class="k">DESC</span>
<span class="k">LIMIT</span> <span class="err">숫자</span><span class="p">;</span>
</code></pre></div></div>

<p>각 절의 역할을 간단히 정리하면:</p>

<ul>
  <li><strong>SELECT</strong>: 조회할 컬럼 지정 (문자열 지정도 가능)</li>
  <li><strong>FROM</strong>: 대상 테이블 지정</li>
  <li><strong>WHERE</strong>: 행 단위 조건 필터링 (괄호로 논리 연산 우선순위 조절 가능)</li>
  <li><strong>GROUP BY</strong>: 특정 컬럼 기준으로 데이터 그룹화</li>
  <li><strong>HAVING</strong>: 그룹화된 데이터에 조건 적용</li>
  <li><strong>ORDER BY</strong>: 결과 정렬 (ASC: 오름차순, DESC: 내림차순)</li>
  <li><strong>LIMIT</strong>: 결과 개수 제한</li>
</ul>

<h3 id="예제">예제</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 점수가 80점 이상인 A반, B반 학생들을 점수 내림차순으로 상위 10명 조회</span>
<span class="k">SELECT</span> <span class="n">name</span><span class="p">,</span> <span class="k">class</span><span class="p">,</span> <span class="n">score</span>
<span class="k">FROM</span> <span class="n">students</span>
<span class="k">WHERE</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span> <span class="k">AND</span> <span class="p">(</span><span class="k">class</span> <span class="o">=</span> <span class="s1">'A'</span> <span class="k">OR</span> <span class="k">class</span> <span class="o">=</span> <span class="s1">'B'</span><span class="p">)</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">score</span> <span class="k">DESC</span>
<span class="k">LIMIT</span> <span class="mi">10</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="문자열-처리-함수">문자열 처리 함수</h2>

<h3 id="concat---문자열-연결">CONCAT - 문자열 연결</h3>

<p>여러 문자열을 하나로 합칠 때 사용합니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 기본 사용법</span>
<span class="k">SELECT</span> <span class="n">CONCAT</span><span class="p">(</span><span class="n">first_name</span><span class="p">,</span> <span class="s1">' '</span><span class="p">,</span> <span class="n">last_name</span><span class="p">)</span> <span class="k">AS</span> <span class="n">full_name</span>
<span class="k">FROM</span> <span class="n">employees</span><span class="p">;</span>

<span class="c1">-- 결과: 'John Doe', 'Jane Smith' 등</span>
</code></pre></div></div>

<h3 id="substring---부분-문자열-추출">SUBSTRING - 부분 문자열 추출</h3>

<p>문자열에서 특정 부분만 추출할 때 사용합니다.</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SUBSTRING</span><span class="p">(</span><span class="err">문자열</span><span class="p">,</span> <span class="err">시작위치</span><span class="p">(</span><span class="mi">1</span><span class="err">부터</span><span class="p">),</span> <span class="err">길이</span><span class="p">)</span>

<span class="c1">-- 예제</span>
<span class="k">SELECT</span> <span class="k">SUBSTRING</span><span class="p">(</span><span class="s1">'Hello World'</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="k">AS</span> <span class="k">result</span><span class="p">;</span>
<span class="c1">-- 결과: 'Hello'</span>

<span class="k">SELECT</span> <span class="k">SUBSTRING</span><span class="p">(</span><span class="s1">'Hello World'</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="k">AS</span> <span class="k">result</span><span class="p">;</span>
<span class="c1">-- 결과: 'World'</span>
</code></pre></div></div>

<h3 id="lower-upper---대소문자-변환">LOWER, UPPER - 대소문자 변환</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="k">LOWER</span><span class="p">(</span><span class="s1">'MySQL'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">lowercase</span><span class="p">,</span>  <span class="c1">-- 'mysql'</span>
    <span class="k">UPPER</span><span class="p">(</span><span class="s1">'database'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">uppercase</span> <span class="c1">-- 'DATABASE'</span>
<span class="k">FROM</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="trim-ltrim-rtrim---공백-제거">TRIM, LTRIM, RTRIM - 공백 제거</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="k">TRIM</span><span class="p">(</span><span class="s1">'  MySQL  '</span><span class="p">)</span> <span class="k">AS</span> <span class="n">trimmed</span><span class="p">,</span>      <span class="c1">-- 'MySQL' (양쪽 공백 제거)</span>
    <span class="n">LTRIM</span><span class="p">(</span><span class="s1">'  MySQL  '</span><span class="p">)</span> <span class="k">AS</span> <span class="n">left_trim</span><span class="p">,</span>   <span class="c1">-- 'MySQL  ' (왼쪽 공백 제거)</span>
    <span class="n">RTRIM</span><span class="p">(</span><span class="s1">'  MySQL  '</span><span class="p">)</span> <span class="k">AS</span> <span class="n">right_trim</span>   <span class="c1">-- '  MySQL' (오른쪽 공백 제거)</span>
<span class="k">FROM</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="replace---문자열-치환">REPLACE - 문자열 치환</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">REPLACE</span><span class="p">(</span><span class="s1">'Hello World'</span><span class="p">,</span> <span class="s1">'World'</span><span class="p">,</span> <span class="s1">'MySQL'</span><span class="p">)</span> <span class="k">AS</span> <span class="k">result</span><span class="p">;</span>
<span class="c1">-- 결과: 'Hello MySQL'</span>
</code></pre></div></div>

<h3 id="regexp_replace---정규식-기반-치환">REGEXP_REPLACE - 정규식 기반 치환</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 숫자만 제거하기</span>
<span class="k">SELECT</span> <span class="n">REGEXP_REPLACE</span><span class="p">(</span><span class="s1">'abc123def456'</span><span class="p">,</span> <span class="s1">'[0-9]'</span><span class="p">,</span> <span class="s1">''</span><span class="p">)</span> <span class="k">AS</span> <span class="k">result</span><span class="p">;</span>
<span class="c1">-- 결과: 'abcdef'</span>
</code></pre></div></div>

<h2 id="날짜-처리-함수">날짜 처리 함수</h2>

<h3 id="날짜-포맷-코드표">날짜 포맷 코드표</h3>

<p>MySQL에서 날짜를 포맷팅할 때 사용하는 주요 코드들입니다:</p>

<table>
  <thead>
    <tr>
      <th>코드</th>
      <th>설명</th>
      <th>예시</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%Y</code></td>
      <td>연도 (4자리)</td>
      <td><code class="language-plaintext highlighter-rouge">2025</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%y</code></td>
      <td>연도 (2자리)</td>
      <td><code class="language-plaintext highlighter-rouge">25</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%m</code></td>
      <td>월 (2자리, 01-12)</td>
      <td><code class="language-plaintext highlighter-rouge">04</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%c</code></td>
      <td>월 (1-12)</td>
      <td><code class="language-plaintext highlighter-rouge">4</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%d</code></td>
      <td>일 (2자리, 01-31)</td>
      <td><code class="language-plaintext highlighter-rouge">08</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%e</code></td>
      <td>일 (1-31)</td>
      <td><code class="language-plaintext highlighter-rouge">8</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%H</code></td>
      <td>시 (24시간, 00-23)</td>
      <td><code class="language-plaintext highlighter-rouge">15</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%h</code>, <code class="language-plaintext highlighter-rouge">%I</code></td>
      <td>시 (12시간, 01-12)</td>
      <td><code class="language-plaintext highlighter-rouge">03</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%i</code></td>
      <td>분 (00-59)</td>
      <td><code class="language-plaintext highlighter-rouge">45</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%s</code>, <code class="language-plaintext highlighter-rouge">%S</code></td>
      <td>초 (00-59)</td>
      <td><code class="language-plaintext highlighter-rouge">20</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%p</code></td>
      <td>AM/PM</td>
      <td><code class="language-plaintext highlighter-rouge">PM</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%W</code></td>
      <td>요일 이름</td>
      <td><code class="language-plaintext highlighter-rouge">Wednesday</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%a</code></td>
      <td>요일 약어</td>
      <td><code class="language-plaintext highlighter-rouge">Wed</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%M</code></td>
      <td>월 이름</td>
      <td><code class="language-plaintext highlighter-rouge">April</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%b</code></td>
      <td>월 약어</td>
      <td><code class="language-plaintext highlighter-rouge">Apr</code></td>
    </tr>
  </tbody>
</table>

<h3 id="now-current_date---현재-날짜시간">NOW(), CURRENT_DATE - 현재 날짜/시간</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">NOW</span><span class="p">()</span> <span class="k">AS</span> <span class="n">current_datetime</span><span class="p">,</span>           <span class="c1">-- 2025-01-27 14:30:25</span>
    <span class="k">CURRENT_DATE</span> <span class="k">AS</span> <span class="k">current_date</span><span class="p">,</span>        <span class="c1">-- 2025-01-27</span>
    <span class="n">CURDATE</span><span class="p">()</span> <span class="k">AS</span> <span class="n">current_date_short</span>      <span class="c1">-- 2025-01-27</span>
<span class="k">FROM</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="date_format---날짜-포맷-변경">DATE_FORMAT - 날짜 포맷 변경</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">DATE_FORMAT</span><span class="p">(</span><span class="n">NOW</span><span class="p">(),</span> <span class="s1">'%Y년 %m월 %d일 %H시 %i분'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">formatted_date</span><span class="p">;</span>
<span class="c1">-- 결과: '2025년 01월 27일 14시 30분'</span>

<span class="k">SELECT</span> <span class="n">DATE_FORMAT</span><span class="p">(</span><span class="s1">'2025-01-27'</span><span class="p">,</span> <span class="s1">'%Y/%m/%d (%a)'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">formatted</span><span class="p">;</span>
<span class="c1">-- 결과: '2025/01/27 (Mon)'</span>
</code></pre></div></div>

<h3 id="str_to_date---문자열을-날짜로-변환">STR_TO_DATE - 문자열을 날짜로 변환</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">STR_TO_DATE</span><span class="p">(</span><span class="s1">'2025-01-27 14:30'</span><span class="p">,</span> <span class="s1">'%Y-%m-%d %H:%i'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">converted_date</span><span class="p">;</span>
<span class="c1">-- 결과: 2025-01-27 14:30:00</span>
</code></pre></div></div>

<h3 id="datediff---날짜-차이-계산">DATEDIFF - 날짜 차이 계산</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="n">DATEDIFF</span><span class="p">(</span><span class="s1">'2025-01-27'</span><span class="p">,</span> <span class="s1">'2025-01-20'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">day_diff</span><span class="p">;</span>
<span class="c1">-- 결과: 7 (일 단위 차이)</span>
</code></pre></div></div>

<h3 id="year-month-day---날짜-구성요소-추출">YEAR, MONTH, DAY - 날짜 구성요소 추출</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="nb">YEAR</span><span class="p">(</span><span class="s1">'2025-01-27'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">year_part</span><span class="p">,</span>     <span class="c1">-- 2025</span>
    <span class="k">MONTH</span><span class="p">(</span><span class="s1">'2025-01-27'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">month_part</span><span class="p">,</span>   <span class="c1">-- 1</span>
    <span class="k">DAY</span><span class="p">(</span><span class="s1">'2025-01-27'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">day_part</span>        <span class="c1">-- 27</span>
<span class="k">FROM</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h2 id="숫자-처리-함수">숫자 처리 함수</h2>

<h3 id="round---반올림">ROUND - 반올림</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">ROUND</span><span class="p">(</span><span class="mi">123</span><span class="p">.</span><span class="mi">456</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="k">AS</span> <span class="n">rounded_2</span><span class="p">,</span>    <span class="c1">-- 123.46</span>
    <span class="n">ROUND</span><span class="p">(</span><span class="mi">123</span><span class="p">.</span><span class="mi">456</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span> <span class="k">AS</span> <span class="n">rounded_1</span><span class="p">,</span>    <span class="c1">-- 123.5</span>
    <span class="n">ROUND</span><span class="p">(</span><span class="mi">123</span><span class="p">.</span><span class="mi">456</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span> <span class="k">AS</span> <span class="n">rounded_0</span>     <span class="c1">-- 123</span>
<span class="k">FROM</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="floor-ceil---내림올림">FLOOR, CEIL - 내림/올림</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">FLOOR</span><span class="p">(</span><span class="mi">123</span><span class="p">.</span><span class="mi">789</span><span class="p">)</span> <span class="k">AS</span> <span class="n">floor_result</span><span class="p">,</span>    <span class="c1">-- 123 (내림)</span>
    <span class="n">CEIL</span><span class="p">(</span><span class="mi">123</span><span class="p">.</span><span class="mi">123</span><span class="p">)</span> <span class="k">AS</span> <span class="n">ceil_result</span>       <span class="c1">-- 124 (올림)</span>
<span class="k">FROM</span> <span class="n">dual</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="abs---절댓값">ABS - 절댓값</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">ABS</span><span class="p">(</span><span class="o">-</span><span class="mi">123</span><span class="p">.</span><span class="mi">45</span><span class="p">)</span> <span class="k">AS</span> <span class="n">absolute_value</span><span class="p">;</span>  <span class="c1">-- 123.45</span>
</code></pre></div></div>

<h3 id="mod---나머지">MOD - 나머지</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="k">MOD</span><span class="p">(</span><span class="mi">17</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="k">AS</span> <span class="n">remainder</span><span class="p">;</span>  <span class="c1">-- 2 (17을 5로 나눈 나머지)</span>
</code></pre></div></div>

<h2 id="조건-처리-함수">조건 처리 함수</h2>

<h3 id="if---단순-조건-분기">IF - 단순 조건 분기</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">name</span><span class="p">,</span>
    <span class="n">score</span><span class="p">,</span>
    <span class="n">IF</span><span class="p">(</span><span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">,</span> <span class="s1">'합격'</span><span class="p">,</span> <span class="s1">'불합격'</span><span class="p">)</span> <span class="k">AS</span> <span class="k">result</span>
<span class="k">FROM</span> <span class="n">students</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="case---복합-조건-분기">CASE - 복합 조건 분기</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">name</span><span class="p">,</span>
    <span class="n">age</span><span class="p">,</span>
    <span class="k">CASE</span> 
        <span class="k">WHEN</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="k">THEN</span> <span class="s1">'성인'</span>
        <span class="k">WHEN</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">13</span> <span class="k">THEN</span> <span class="s1">'청소년'</span>
        <span class="k">WHEN</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">7</span> <span class="k">THEN</span> <span class="s1">'어린이'</span>
        <span class="k">ELSE</span> <span class="s1">'유아'</span>
    <span class="k">END</span> <span class="k">AS</span> <span class="n">age_group</span>
<span class="k">FROM</span> <span class="n">users</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="ifnull---null-값-처리">IFNULL - NULL 값 처리</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">name</span><span class="p">,</span>
    <span class="n">IFNULL</span><span class="p">(</span><span class="n">phone</span><span class="p">,</span> <span class="s1">'연락처 없음'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">contact</span>
<span class="k">FROM</span> <span class="n">customers</span><span class="p">;</span>
</code></pre></div></div>

<h3 id="coalesce---여러-값-중-null이-아닌-첫-번째-값">COALESCE - 여러 값 중 NULL이 아닌 첫 번째 값</h3>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> 
    <span class="n">name</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">mobile</span><span class="p">,</span> <span class="n">office_phone</span><span class="p">,</span> <span class="n">home_phone</span><span class="p">,</span> <span class="s1">'연락처 없음'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">primary_contact</span>
<span class="k">FROM</span> <span class="n">customers</span><span class="p">;</span>
<span class="c1">-- mobile이 NULL이 아니면 mobile을, NULL이면 office_phone을, </span>
<span class="c1">-- 그것도 NULL이면 home_phone을, 모두 NULL이면 '연락처 없음'을 반환</span>
</code></pre></div></div>

<h2 id="마무리">마무리</h2>

<p>이번 글에서 정리한 MySQL 함수들은 실무에서 가장 자주 사용되는 것들입니다. 특히 문자열 처리, 날짜 계산, 조건부 로직은 거의 모든 프로젝트에서 필요한 기능들이죠.</p>

<p>이러한 함수들을 조합해서 사용하면 더 복잡한 데이터 처리도 가능합니다. 예를 들어:</p>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">-- 실무 활용 예제: 고객 정보를 보기 좋게 정리</span>
<span class="k">SELECT</span> 
    <span class="n">CONCAT</span><span class="p">(</span><span class="k">UPPER</span><span class="p">(</span><span class="k">SUBSTRING</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)),</span> <span class="k">LOWER</span><span class="p">(</span><span class="k">SUBSTRING</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="mi">2</span><span class="p">)))</span> <span class="k">AS</span> <span class="n">formatted_name</span><span class="p">,</span>
    <span class="n">DATE_FORMAT</span><span class="p">(</span><span class="n">birth_date</span><span class="p">,</span> <span class="s1">'%Y년 %m월 %d일'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">birth_formatted</span><span class="p">,</span>
    <span class="k">CASE</span> 
        <span class="k">WHEN</span> <span class="n">DATEDIFF</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">(),</span> <span class="n">birth_date</span><span class="p">)</span> <span class="o">/</span> <span class="mi">365</span> <span class="o">&gt;=</span> <span class="mi">65</span> <span class="k">THEN</span> <span class="s1">'시니어'</span>
        <span class="k">WHEN</span> <span class="n">DATEDIFF</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">(),</span> <span class="n">birth_date</span><span class="p">)</span> <span class="o">/</span> <span class="mi">365</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="k">THEN</span> <span class="s1">'일반'</span>
        <span class="k">ELSE</span> <span class="s1">'청소년'</span>
    <span class="k">END</span> <span class="k">AS</span> <span class="n">customer_type</span><span class="p">,</span>
    <span class="n">COALESCE</span><span class="p">(</span><span class="n">mobile</span><span class="p">,</span> <span class="n">phone</span><span class="p">,</span> <span class="s1">'연락처 없음'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">contact</span>
<span class="k">FROM</span> <span class="n">customers</span>
<span class="k">WHERE</span> <span class="n">created_at</span> <span class="o">&gt;=</span> <span class="n">DATE_SUB</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">(),</span> <span class="n">INTERVAL</span> <span class="mi">1</span> <span class="k">MONTH</span><span class="p">)</span>
<span class="k">ORDER</span> <span class="k">BY</span> <span class="n">created_at</span> <span class="k">DESC</span><span class="p">;</span>
</code></pre></div></div>]]></content><author><name>개발둥이</name></author><category term="SQL" /><category term="SQL" /><category term="MySQL" /><category term="Database" /><category term="쿼리" /><summary type="html"><![CDATA[데이터베이스를 다루다 보면 SQL 쿼리 작성이 필수가 됩니다. 특히 MySQL을 사용할 때 자주 쓰이는 구문과 함수들을 정리해두면 실무에서 큰 도움이 됩니다.]]></summary></entry></feed>